// Code generated by mockery v1.0.0. DO NOT EDIT.

package types

import mock "github.com/stretchr/testify/mock"

// MockTxCensor is an autogenerated mock type for the TxCensor type
type MockTxCensor struct {
	mock.Mock
}

// Block provides a mock function with given fields:
func (_m *MockTxCensor) Block() *Block {
	ret := _m.Called()

	var r0 *Block
	if rf, ok := ret.Get(0).(func() *Block); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Block)
		}
	}

	return r0
}

// BlockChain provides a mock function with given fields:
func (_m *MockTxCensor) BlockChain() BlockChain {
	ret := _m.Called()

	var r0 BlockChain
	if rf, ok := ret.Get(0).(func() BlockChain); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(BlockChain)
		}
	}

	return r0
}

// GetLastChangedVals provides a mock function with given fields:
func (_m *MockTxCensor) GetLastChangedVals() (uint64, []*Validator) {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	var r1 []*Validator
	if rf, ok := ret.Get(1).(func() []*Validator); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([]*Validator)
		}
	}

	return r0, r1
}

// GetUTXOGas provides a mock function with given fields:
func (_m *MockTxCensor) GetUTXOGas() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// IsWasmContract provides a mock function with given fields: data
func (_m *MockTxCensor) IsWasmContract(data []byte) bool {
	ret := _m.Called(data)

	var r0 bool
	if rf, ok := ret.Get(0).(func([]byte) bool); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// LockState provides a mock function with given fields:
func (_m *MockTxCensor) LockState() {
	_m.Called()
}

// Mempool provides a mock function with given fields:
func (_m *MockTxCensor) Mempool() Mempool {
	ret := _m.Called()

	var r0 Mempool
	if rf, ok := ret.Get(0).(func() Mempool); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Mempool)
		}
	}

	return r0
}

// State provides a mock function with given fields:
func (_m *MockTxCensor) State() State {
	ret := _m.Called()

	var r0 State
	if rf, ok := ret.Get(0).(func() State); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(State)
		}
	}

	return r0
}

// TxMgr provides a mock function with given fields:
func (_m *MockTxCensor) TxMgr() TxMgr {
	ret := _m.Called()

	var r0 TxMgr
	if rf, ok := ret.Get(0).(func() TxMgr); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(TxMgr)
		}
	}

	return r0
}

// UTXOStore provides a mock function with given fields:
func (_m *MockTxCensor) UTXOStore() UTXOStore {
	ret := _m.Called()

	var r0 UTXOStore
	if rf, ok := ret.Get(0).(func() UTXOStore); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(UTXOStore)
		}
	}

	return r0
}

// UnlockState provides a mock function with given fields:
func (_m *MockTxCensor) UnlockState() {
	_m.Called()
}

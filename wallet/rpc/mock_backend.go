// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/lianxiangcloud/linkchain/wallet/rpc (interfaces: Backend)

// Package rpc is a generated GoMock package.
package rpc

import (
	gomock "github.com/golang/mock/gomock"
	accounts "github.com/lianxiangcloud/linkchain/accounts"
	reflect "reflect"
)

// MockBackend is a mock of Backend interface
type MockBackend struct {
	ctrl     *gomock.Controller
	recorder *MockBackendMockRecorder
}

// MockBackendMockRecorder is the mock recorder for MockBackend
type MockBackendMockRecorder struct {
	mock *MockBackend
}

// NewMockBackend creates a new mock instance
func NewMockBackend(ctrl *gomock.Controller) *MockBackend {
	mock := &MockBackend{ctrl: ctrl}
	mock.recorder = &MockBackendMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBackend) EXPECT() *MockBackendMockRecorder {
	return m.recorder
}

// AccountManager mocks base method
func (m *MockBackend) AccountManager() *accounts.Manager {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AccountManager")
	ret0, _ := ret[0].(*accounts.Manager)
	return ret0
}

// AccountManager indicates an expected call of AccountManager
func (mr *MockBackendMockRecorder) AccountManager() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccountManager", reflect.TypeOf((*MockBackend)(nil).AccountManager))
}

// GetWallet mocks base method
func (m *MockBackend) GetWallet() Wallet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWallet")
	ret0, _ := ret[0].(Wallet)
	return ret0
}

// GetWallet indicates an expected call of GetWallet
func (mr *MockBackendMockRecorder) GetWallet() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWallet", reflect.TypeOf((*MockBackend)(nil).GetWallet))
}

// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import big "math/big"
import common "github.com/lianxiangcloud/linkchain/libs/common"
import mock "github.com/stretchr/testify/mock"

import types "github.com/lianxiangcloud/linkchain/types"

// Wallet is an autogenerated mock type for the Wallet type
type Wallet struct {
	mock.Mock
}

// CreateUTXOTransaction provides a mock function with given fields: subaddrs, dests, tokenID, refundAddr, extra
func (_m *Wallet) CreateUTXOTransaction(subaddrs []uint64, dests []*types.UTXODestEntry, tokenID common.Address, refundAddr common.Address, extra []byte) ([]*types.UTXOTransaction, error) {
	ret := _m.Called(subaddrs, dests, tokenID, refundAddr, extra)

	var r0 []*types.UTXOTransaction
	if rf, ok := ret.Get(0).(func([]uint64, []*types.UTXODestEntry, common.Address, common.Address, []byte) []*types.UTXOTransaction); ok {
		r0 = rf(subaddrs, dests, tokenID, refundAddr, extra)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*types.UTXOTransaction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]uint64, []*types.UTXODestEntry, common.Address, common.Address, []byte) error); ok {
		r1 = rf(subaddrs, dests, tokenID, refundAddr, extra)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAddress provides a mock function with given fields: index
func (_m *Wallet) GetAddress(index uint64) (string, error) {
	ret := _m.Called(index)

	var r0 string
	if rf, ok := ret.Get(0).(func(uint64) string); ok {
		r0 = rf(index)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint64) error); ok {
		r1 = rf(index)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBalance provides a mock function with given fields: index
func (_m *Wallet) GetBalance(index uint64) *big.Int {
	ret := _m.Called(index)

	var r0 *big.Int
	if rf, ok := ret.Get(0).(func(uint64) *big.Int); ok {
		r0 = rf(index)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*big.Int)
		}
	}

	return r0
}

// GetHeight provides a mock function with given fields:
func (_m *Wallet) GetHeight() (uint64, uint64) {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	var r1 uint64
	if rf, ok := ret.Get(1).(func() uint64); ok {
		r1 = rf()
	} else {
		r1 = ret.Get(1).(uint64)
	}

	return r0, r1
}

// Transfer provides a mock function with given fields: txs
func (_m *Wallet) Transfer(txs []string) []string {
	ret := _m.Called(txs)

	var r0 []string
	if rf, ok := ret.Get(0).(func([]string) []string); ok {
		r0 = rf(txs)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

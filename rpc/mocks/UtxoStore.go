// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import common "github.com/lianxiangcloud/linkchain/libs/common"
import lk_crypto_libstypes "github.com/lianxiangcloud/linkchain/libs/cryptonote/types"
import mock "github.com/stretchr/testify/mock"

import types "github.com/lianxiangcloud/linkchain/types"

// UtxoStore is an autogenerated mock type for the UtxoStore type
type UtxoStore struct {
	mock.Mock
}

// GetMaxUtxoOutputSeq provides a mock function with given fields: token
func (_m *UtxoStore) GetMaxUtxoOutputSeq(token common.Address) int64 {
	ret := _m.Called(token)

	var r0 int64
	if rf, ok := ret.Get(0).(func(common.Address) int64); ok {
		r0 = rf(token)
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// GetUtxoOutput provides a mock function with given fields: token, index
func (_m *UtxoStore) GetUtxoOutput(token common.Address, index uint64) (*types.UTXOOutputData, error) {
	ret := _m.Called(token, index)

	var r0 *types.UTXOOutputData
	if rf, ok := ret.Get(0).(func(common.Address, uint64) *types.UTXOOutputData); ok {
		r0 = rf(token, index)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.UTXOOutputData)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(common.Address, uint64) error); ok {
		r1 = rf(token, index)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// HaveTxKeyimgAsSpent provides a mock function with given fields: img
func (_m *UtxoStore) HaveTxKeyimgAsSpent(img *lk_crypto_libstypes.Key) bool {
	ret := _m.Called(img)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*lk_crypto_libstypes.Key) bool); ok {
		r0 = rf(img)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
